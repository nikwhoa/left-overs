{"version":3,"sources":["About/About.js","Filter/Length.js","Filter/Width.js","Filter/Height.js","Filter/Material.js","service/dataService.js","Filter/Filter.js","NomenclatureList/NomenclatureList.js","App.js","index.js"],"names":["About","Container","Row","className","Col","Length","props","state","title","show","value","dropdownRef","React","createRef","dropdownButtonRef","this","setState","getDataToDisplay","e","current","toLowerCase","valuesLength","map","item","i","Dropdown","Item","onClick","setTitle","href","loading","undefined","content","InputGroup","onDropDownButton","target","nodeName","DropdownButton","variant","id","FormControl","type","ref","onChange","updateLength","currentTarget","inputHandler","Component","Width","ValuesWidth","valuesWidth","updateWidth","Height","ValuesHeight","valuesHeight","updateHeight","Material","useState","material","materials","throwMaterial","length","class","dataService","code","width","height","quantity","price","_data","nomenclatures","filter","B","includes","createItem","slice","match","indexOf","getData","result","forEach","push","A","E","F","H","I","Filter","lengthOnChange","widthOnChange","heightOnChange","searchCase","valuesToDisplay","dataServices","searchForLength","items","toString","searchForWidth","searchForHeight","updateSearchValue","dataCase","sort","a","b","element","index","array","visibleLengthValues","visibleWidthValues","visibleHeightValues","onValuesToDisplay","Object","values","search","getNomenclatureList","SearchButton","Button","NomenclatureList","showNomenclatures","setNomenclatures","sortNomenclatures","setSort","loadMore","setLoadMore","useEffect","toShowNomenclatures","visibleNomenclatures","data","sorting","style","textAlign","fontWeight","margin","sortBtns","contentToShow","console","log","paddingBottom","App","isLoaded","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gnm3BAsBeA,EApBD,WACV,OACI,mCACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKC,UAAU,OAAf,SACI,eAACC,EAAA,EAAD,CAAKD,UAAU,QAAf,UACI,4RAGA,oBAAIA,UAAU,cACd,qlBACA,qc,+CCsDTE,E,kDA7DX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,MAAO,iCACPC,MAAM,EACNC,MAAO,IAEX,EAAKC,YAAcC,IAAMC,YACzB,EAAKC,kBAAoBF,IAAMC,YARhB,E,4CAUnB,SAASL,GACLO,KAAKC,SAAS,CAAER,UAChBO,KAAKT,MAAMW,iBAAiBT,EAAO,Y,0BAEvC,SAAaU,GACTH,KAAKC,SAAS,CAACN,MAAOQ,IACiB,KAAnCH,KAAKJ,YAAYQ,QAAQT,MACzBK,KAAKC,SAAS,CAACP,MAAM,IAErBM,KAAKC,SAAS,CAACP,MAAM,M,8BAG7B,SAAiBS,GACW,WAApBA,EAAEE,cACFL,KAAKC,SAAS,CAACP,MAAOM,KAAKR,MAAME,OAEjCM,KAAKC,SAAS,CAACP,MAAM,M,oBAK7B,WAAU,IAAD,OAECY,EAAeN,KAAKT,MAAMe,aAAaC,KAAI,SAACC,EAAMC,GAAP,OAAa,cAACC,EAAA,EAASC,KAAV,CAAeC,QAAS,SAACT,GAAD,OAAO,EAAKU,SAASL,IAAeM,KAAK,IAAjE,SAAsEN,GAAbC,MACjHM,OAAsCC,IAA5BhB,KAAKT,MAAMe,aAA6B,UAAY,KAC9DW,OAAsCD,IAA5BhB,KAAKT,MAAMe,aAA6BA,EAAe,KAEvE,OACI,cAACjB,EAAA,EAAD,CAAKD,UAAU,kBAAf,SACI,eAAC8B,EAAA,EAAD,CAAYN,QAAS,SAAAT,GAAC,OAAI,EAAKgB,iBAAiBhB,EAAEiB,OAAOC,WAAYjC,UAAU,OAA/E,UACI,eAACkC,EAAA,EAAD,CACI5B,KAAMM,KAAKR,MAAME,KACjBN,UAAU,OACVmC,QAAQ,oBACR9B,MAA4B,mCAArBO,KAAKR,MAAMC,MAAoB,iCAAUO,KAAKR,MAAMC,MAAQ,gBACnE+B,GAAG,gBALP,UASKT,EACAE,KAEL,cAACQ,EAAA,EAAD,CAAaC,KAAK,SAAS/B,MAA4B,mCAArBK,KAAKR,MAAMC,MAAqBO,KAAKR,MAAMG,MAASK,KAAKR,MAAMG,OAASK,KAAKR,MAAMC,MAAQ,GAAKO,KAAKR,MAAMG,MAAOgC,IAAK3B,KAAKJ,YAAagC,SAAU,SAAAzB,GAAO,EAAKZ,MAAMsC,aAAa1B,EAAE2B,cAAcnC,MAAO,UAAW,EAAKoC,aAAa5B,EAAE2B,cAAcnC,QAAU,aAAW,6C,GAtD5SqC,aCgENC,E,kDA7DX,WAAY1C,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,MAAO,uCACPC,MAAM,EACNC,MAAO,IAEX,EAAKC,YAAcC,IAAMC,YACzB,EAAKC,kBAAoBF,IAAMC,YARhB,E,4CAUnB,SAASL,GACLO,KAAKC,SAAS,CAACR,MAAOA,IACtBO,KAAKT,MAAMW,iBAAiBT,EAAO,W,0BAEvC,SAAaU,GACTH,KAAKC,SAAS,CAACN,MAAOQ,IACiB,KAAnCH,KAAKJ,YAAYQ,QAAQT,MACzBK,KAAKC,SAAS,CAACP,MAAM,IAErBM,KAAKC,SAAS,CAACP,MAAM,M,8BAG7B,SAAiBS,GACW,WAApBA,EAAEE,cACFL,KAAKC,SAAS,CAACP,MAAOM,KAAKR,MAAME,OAEjCM,KAAKC,SAAS,CAACP,MAAM,M,oBAK7B,WAAU,IAAD,OAECwC,EAAc,kBAAM,EAAK3C,MAAM4C,YAAY5B,KAAI,SAACC,EAAMC,GAAP,OAAa,cAACC,EAAA,EAASC,KAAV,CAAeC,QAAS,SAACT,GAAD,OAAO,EAAKU,SAASL,IAAeM,KAAK,IAAjE,SAAsEN,GAAbC,OAErHM,OAAqCC,IAA3BhB,KAAKT,MAAM4C,YAA4B,UAAY,KAC7DlB,OAAqCD,IAA3BhB,KAAKT,MAAM4C,YAA4B,cAACD,EAAD,IAAkB,KAEzE,OACI,cAAC7C,EAAA,EAAD,CAAKD,UAAU,kBAAf,SACI,eAAC8B,EAAA,EAAD,CAAYN,QAAS,SAAAT,GAAC,OAAI,EAAKgB,iBAAiBhB,EAAEiB,OAAOC,WAAWjC,UAAU,OAA9E,UACI,eAACkC,EAAA,EAAD,CACI5B,KAAMM,KAAKR,MAAME,KACjB6B,QAAQ,oBACR9B,MAA4B,yCAArBO,KAAKR,MAAMC,MAAqB,uCAAWO,KAAKR,MAAMC,MAAQ,gBACrE+B,GAAG,eAJP,UAMKT,EACAE,KAEL,cAACQ,EAAA,EAAD,CAAaC,KAAK,SAAS/B,MAA4B,yCAArBK,KAAKR,MAAMC,MAAqBO,KAAKR,MAAMG,MAAQK,KAAKR,MAAMG,OAASK,KAAKR,MAAMC,MAAQ,GAAKO,KAAKR,MAAMG,MAAOgC,IAAK3B,KAAKJ,YAAagC,SAAU,SAACzB,GAAQ,EAAKZ,MAAM6C,YAAYjC,EAAE2B,cAAcnC,MAAO,SAAU,EAAKoC,aAAa5B,EAAE2B,cAAcnC,QAAU,aAAW,6C,GApD5SqC,aC2DLK,E,kDA3DX,WAAY9C,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,MAAO,6CACPC,MAAM,EACNC,MAAO,IAEX,EAAKC,YAAcC,IAAMC,YACzB,EAAKC,kBAAoBF,IAAMC,YARhB,E,4CAUnB,SAASL,GACLO,KAAKC,SAAS,CAAER,MAAOA,IACvBO,KAAKT,MAAMW,iBAAiBT,EAAO,Y,0BAEvC,SAAaU,GACTH,KAAKC,SAAS,CAACN,MAAOQ,IACiB,KAAnCH,KAAKJ,YAAYQ,QAAQT,MACzBK,KAAKC,SAAS,CAACP,MAAM,IAErBM,KAAKC,SAAS,CAACP,MAAM,M,8BAG7B,SAAiBS,GACW,WAApBA,EAAEE,cACFL,KAAKC,SAAS,CAACP,MAAOM,KAAKR,MAAME,OAEjCM,KAAKC,SAAS,CAACP,MAAM,M,oBAK7B,WAAU,IAAD,OAGC4C,EAAe,kBAAM,EAAK/C,MAAMgD,aAAahC,KAAI,SAACC,EAAMC,GAAP,OAAa,cAACC,EAAA,EAASC,KAAV,CAAeC,QAAS,SAACT,GAAD,OAAO,EAAKU,SAASL,IAAeM,KAAK,IAAjE,SAAsEN,GAAbC,OAEvHM,OAAsCC,IAA5BhB,KAAKT,MAAMgD,aAA6B,UAAY,KAC9DtB,OAAsCD,IAA5BhB,KAAKT,MAAMgD,aAA6B,cAACD,EAAD,IAAmB,KAG3E,OACI,cAACjD,EAAA,EAAD,CAAKD,UAAU,kBAAf,SACI,eAAC8B,EAAA,EAAD,CAAYN,QAAS,SAAAT,GAAC,OAAI,EAAKgB,iBAAiBhB,EAAEiB,OAAOC,WAAWjC,UAAU,OAA9E,UACI,eAACkC,EAAA,EAAD,CACI5B,KAAMM,KAAKR,MAAME,KACjB6B,QAAQ,oBACR9B,MAA4B,+CAArBO,KAAKR,MAAMC,MAAsB,6CAAYO,KAAKR,MAAMC,MAAQ,gBACvE+B,GAAG,gBAJP,UAMKT,EACAE,KAEL,cAACQ,EAAA,EAAD,CAAaC,KAAK,SAAS/B,MAA4B,+CAArBK,KAAKR,MAAMC,MAAuBO,KAAKR,MAAMG,MAASK,KAAKR,MAAMG,OAASK,KAAKR,MAAMC,MAAQ,GAAKO,KAAKR,MAAMG,MAAOgC,IAAK3B,KAAKJ,YAAagC,SAAU,SAACzB,GAAO,EAAKZ,MAAMiD,aAAarC,EAAE2B,cAAcnC,MAAO,UAAW,EAAKoC,aAAa5B,EAAE2B,cAAcnC,QAAU,aAAW,6C,GAtD/SqC,a,OC4BNS,EA5BE,SAAClD,GAGd,MAA0BmD,mBAAS,oDAAnC,mBAAOjD,EAAP,KAAcoB,EAAd,KAKM8B,EAAWpD,EAAMqD,UAAUrC,KAAI,SAACoC,EAAUlC,GAAX,OAAiB,cAACC,EAAA,EAASC,KAAV,CAAeC,QAAS,SAACT,GAAOU,EAAS8B,GAJzE,SAACA,GACnBpD,EAAMW,iBAAiByC,EAAU,YAGqEE,CAAcF,IAAoB7B,KAAK,IAA3F,SAAgG6B,GAAblC,MACnIM,EAAUxB,EAAMqD,UAAUE,OAAS,EAAI,UAAY,KACnD7B,EAAU1B,EAAMqD,UAAUE,OAAS,EAAIH,EAAW,KACxD,OACI,cAACtD,EAAA,EAAD,CAAKD,UAAU,kBAAf,SACI,cAAC8B,EAAA,EAAD,CAAY9B,UAAS,eAAUG,EAAMwD,OAArC,SACI,eAACzB,EAAA,EAAD,CACIC,QAAQ,oBACR9B,MAAOA,EACP+B,GAAG,kBAHP,UAKKT,EACAE,U,QCqDN+B,EAlEX,WAAYC,EAAMxD,EAAOqD,EAAQI,EAAOC,EAAQC,EAAUC,GAAQ,IAAD,gCAJjEC,MAAQC,EAAsBC,QAAO,SAAAhD,GAAI,OAAKA,EAAKiD,EAAEC,SAAS,kEAAkBlD,EAAKiD,EAAEC,SAAS,4DAAiBlD,EAAKiD,EAAEC,SAAS,4FAIhE,KAUjEC,WAAa,WAmCT,MAXmB,CACfV,KAAM,EAAKA,KACXxD,MAAO,EAAKA,MACZkD,SAzBW,WAEX,IAAIlD,EAA0B,MAAlB,EAAKA,MAAM,GAAa,EAAKA,MAAMmE,MAAM,GAAK,EAAKnE,MAE/D,OAAIA,EAAMoE,MAAM,yBACL,qBACApE,EAAMoE,MAAM,yBACZ,qBACApE,EAAMoE,MAAM,+BACZ,2BACApE,EAAMoE,MAAM,uFAAwBpE,EAAMoE,MAAM,sFAChD,kFACApE,EAAMoE,MAAM,8DACZ,0DACApE,EAAMoE,MAAM,yCACZ,0CADJ,EAWGlB,GACVG,QAAS,EAAKA,OAAOc,MAAM,EAAG,EAAKd,OAAOgB,QAAQ,WAClDZ,OAAQ,EAAKA,MAAMU,MAAM,EAAKV,MAAMY,QAAQ,UAAc,GAC1DX,OAAQ,EAAKA,OACbC,SAAU,EAAKA,SACfC,MAAO,EAAKA,QA1C6C,KAgDjEU,QAAU,WACN,IAAIC,EAAS,GAYb,OAXA,EAAKV,MAAMW,SAAQ,SAAAzD,GACfwD,EAAOE,KAAK,IAAIlB,EACZxC,EAAK2D,EACL3D,EAAKiD,EACLjD,EAAK4D,EACL5D,EAAK4D,EACL5D,EAAK6D,EACL7D,EAAK8D,EACL9D,EAAK+D,GAAGZ,iBAGTK,GA5DPhE,KAAKiD,MAAQA,EACbjD,KAAKP,MAAQA,EACbO,KAAK8C,OAASA,EACd9C,KAAKkD,MAAQA,EACblD,KAAKmD,QAAUA,EACfnD,KAAKoD,UAAYA,EACjBpD,KAAKqD,OAASA,GCPhBmB,E,4MACFhF,MAAQ,CACJ+D,cAAe,GACfT,OAAQ,GACRI,MAAO,GACPC,OAAQ,GACRR,SAAU,KACV8B,eAAgB,GAChBC,cAAe,GACfC,eAAgB,GAChBC,WAAY,GACZC,gBAAiB,CACb/B,OAAQ,KACRI,MAAO,KACPC,OAAQ,KACRR,SAAU,O,EAIlBmC,aAAe,IAAI9B,E,EAgBnB+B,gBAAkB,SAACC,EAAOrF,GACtB,OAAIA,EAAMmD,QAAU,EACTkC,EAEAA,EAAMxB,QAAO,SAAAhD,GAAI,OAAIA,EAAKyE,WAAWvB,SAAS/D,O,EAI7DuF,eAAiB,SAACF,EAAOrF,GACrB,OAAIA,EAAMmD,QAAU,EACTkC,EAEAA,EAAMxB,QAAO,SAAAhD,GAAI,OAAIA,EAAKyE,WAAWvB,SAAS/D,O,EAG7DwF,gBAAkB,SAACH,EAAOrF,GACtB,OAAIA,EAAMmD,QAAU,EACTkC,EAEAA,EAAMxB,QAAO,SAAAhD,GAAI,OAAIA,EAAKyE,WAAWvB,SAAS/D,O,EAI7DyF,kBAAoB,SAACzF,EAAOiF,GACxB,OAAQA,GACJ,IAAK,SACD,EAAK3E,SAAS,CAAEwE,eAAgB9E,EAAOiF,eACvC,MACJ,IAAK,QACD,EAAK3E,SAAS,CAAEyE,cAAe/E,EAAOiF,eACtC,MACJ,IAAK,SACD,EAAK3E,SAAS,CAAE0E,eAAgBhF,EAAOiF,iB,EAOnD1E,iBAAmB,SAACP,EAAO0F,GAEvB,IAAIR,EAAe,eAAQ,EAAKrF,MAAMqF,iBAEtC,OAAQQ,GACJ,IAAK,SACDR,EAAgB/B,OAASnD,EACzB,EAAKM,SAAS,CAAE4E,oBAChB,MACJ,IAAK,QACDA,EAAgB3B,MAAQvD,EACxB,EAAKM,SAAS,CAAE4E,oBAChB,MACJ,IAAK,SACDA,EAAgB1B,OAASxD,EACzB,EAAKM,SAAS,CAAE4E,oBAChB,MACJ,IAAK,WACDA,EAAgBlC,SAAWhD,EAC3B,EAAKM,SAAS,CAAE4E,sB,uDAxE5B,WACI7E,KAAKC,SAAS,CAAEsD,cAAevD,KAAK8E,aAAaf,c,oBA8ErD,WACI,MAA0D/D,KAAKR,MAAvDkF,EAAR,EAAQA,cAAeD,EAAvB,EAAuBA,eAAgBE,EAAvC,EAAuCA,eACjC7B,EAAS9C,KAAKR,MAAM+D,cAAchD,KAAI,SAAAC,GAAI,OAAIA,EAAKsC,UAAQwC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KAAGhC,QAAO,SAACiC,EAASC,EAAOC,GAAjB,OAA2BA,EAAM7B,QAAQ2B,KAAaC,KAC9IxC,EAAQlD,KAAKR,MAAM+D,cAAchD,KAAI,SAAAC,GAAI,OAAIA,EAAK0C,SAAOoC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KAAGhC,QAAO,SAACiC,EAASC,EAAOC,GAAjB,OAA2BA,EAAM7B,QAAQ2B,KAAaC,KAC5IvC,EAASnD,KAAKR,MAAM+D,cAAchD,KAAI,SAAAC,GAAI,OAAIA,EAAK2C,UAAQmC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KAAGhC,QAAO,SAACiC,EAASC,EAAOC,GAAjB,OAA2BA,EAAM7B,QAAQ2B,KAAaC,KAC9I/C,EAAW3C,KAAKR,MAAM+D,cAAchD,KAAI,SAAAC,GAAI,OAAIA,EAAKmC,YAAU2C,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,KAAGhC,QAAO,SAACiC,EAASC,EAAOC,GAAjB,OAA2BA,EAAM7B,QAAQ2B,KAAaC,KAClJE,EAAsB5F,KAAK+E,gBAAgBjC,EAAQ2B,GACnDoB,EAAqB7F,KAAKkF,eAAehC,EAAOwB,GAChDoB,EAAsB9F,KAAKmF,gBAAgBhC,EAAQwB,GAEnDoB,EAAoBC,OAAOC,OAAOjG,KAAKR,MAAMqF,iBAAiBrB,QAAO,SAAAhD,GAAI,OAAIA,GAAiB,IAATA,KAG3F,OACI,eAACtB,EAAA,EAAD,CAAWE,UAAU,OAArB,UACI,eAACD,EAAA,EAAD,CAAKC,UAAU,yBAAf,UACI,cAAC,EAAD,CAAQc,iBAAkBF,KAAKE,iBAAkB2B,aAAc7B,KAAKoF,kBAAmB9E,aAAcsF,IACrG,cAAC,EAAD,CAAO1F,iBAAkBF,KAAKE,iBAAkBkC,YAAapC,KAAKoF,kBAAmBjD,YAAa0D,IAClG,cAAC,EAAD,CAAQ3F,iBAAkBF,KAAKE,iBAAkBsC,aAAcxC,KAAKoF,kBAAmB7C,aAAcuD,OAEzG,cAAC3G,EAAA,EAAD,CAAKC,UAAU,yBAAf,SACI,cAAC,EAAD,CAAUc,iBAAkBF,KAAKE,iBAAkB6C,MAAO,yBAA0BH,UAAWD,MAGjGoD,EAAkBjD,QAAU,GAAK,cAAC,EAAD,CAAciB,QAAS/D,KAAKT,MAAMwE,QAASmC,OAAQlG,KAAKT,MAAM4G,oBAAqB5C,cAAevD,KAAKR,MAAM+D,cAAe/D,MAAOQ,KAAKR,MAAMqF,yB,GA5H5K7C,aAuIfoE,EAAe,SAAC7G,GAElB,OACI,cAACJ,EAAA,EAAD,CAAKC,UAAU,OAAf,SACI,cAACC,EAAA,EAAD,CAAKD,UAAU,GAAf,SACI,cAACiH,EAAA,EAAD,CAAQjH,UAAU,aAAawB,QAAS,WAAOrB,EAAMwE,QAAQxE,EAAMC,MAAOD,EAAMgE,eAAgBhE,EAAM2G,OAAO3G,EAAMgE,gBAAiBhC,QAAQ,UAA5I,iDAMDiD,IC5DA8B,EA3FU,SAAC/G,GACxB,MAA8CmD,mBAAS,MAAvD,mBAAO6D,EAAP,KAA0BC,EAA1B,KACA,EAAqC9D,mBAAS,QAA9C,mBAAO+D,EAAP,KAA0BC,EAA1B,KACA,EAAgChE,mBAAS,GAAzC,mBAAOiE,EAAP,KAAiBC,EAAjB,KAEAC,qBAAU,WACRC,MACC,IAEHD,qBAAU,WACRC,MACC,CAACL,IAEJI,qBAAU,WACRC,MACC,CAACvH,IAEJ,IAAMuH,EAAsB,WAE1B,IAAIC,EAAuBxH,EAAMgE,cAAcC,QAAO,SAAAhD,GAAI,OACxDA,EAAKsC,OAASvD,EAAMyH,KAAKlE,QACtBtC,EAAK2C,OAAS5D,EAAMyH,KAAK7D,QACzB3C,EAAK0C,MAAQ3D,EAAMyH,KAAK9D,OACxB1C,EAAKmC,WAAapD,EAAMyH,KAAKrE,YAC/B2C,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEkB,GAAqBjB,EAAEiB,MAE3CD,EAAiBO,IAGbE,EAAU,SAAC3B,GACfoB,EAAQpB,IAGJvE,EAAgC,OAAtBwF,EAA6B,UAAY,KACnDtF,EAAgC,OAAtBsF,EAA6BA,EAAkBhG,KAAI,SAACC,EAAMC,GAAP,OAEjE,qBAA+BrB,UAAU,+BAAzC,SACE,qBAAIA,UAAU,cAAd,UACE,6BACE,mBAAG8H,MAAO,CAAEC,UAAW,SAAUC,WAAY,OAAQC,OAAQ,UAA7D,SACG7G,EAAKf,UAGV,+BACE,2GADF,IACyBe,EAAKyC,QAE9B,+BACE,kFADF,IACoBzC,EAAKmC,YAEzB,+BACE,sEADF,IACkBnC,EAAK0C,MADvB,iBACiC,0BAEjC,+BACE,sEADF,IACkB1C,EAAK2C,OADvB,gBACiC,0BAEjC,+BACE,gEADF,IACiB3C,EAAKsC,OADtB,gBACgC,0BAEhC,+BACE,0DADF,IACgBtC,EAAK6C,MADrB,iBAtBJ,UAAa7C,EAAKyC,KAAlB,YAA0BxC,OA4BxB,KACE6G,EAAW,cAACnI,EAAA,EAAD,UACf,eAACE,EAAA,EAAD,CAAKD,UAAU,SAAf,6FACE,cAACiH,EAAA,EAAD,CAAQjH,UAAU,WAAWwB,QAAS,kBAAMqG,EAAQ,UAAU1F,QAAQ,QAAtE,kDACA,cAAC8E,EAAA,EAAD,CAAQjH,UAAU,WAAWwB,QAAS,kBAAMqG,EAAQ,WAAW1F,QAAQ,QAAvE,iDAGEgG,EAA4B,OAAZtG,EAAmB,cAAC5B,EAAA,EAAD,oNAAmD4B,EAAQuC,QAAO,SAAChD,EAAMkF,GAChH,KAAOA,EAAQiB,GACb,OAAOnG,EAET,OAAO,KAGT,OADAgH,QAAQC,IAAIF,GAEV,eAACrI,EAAA,EAAD,CAAWgI,MAAO,CAACQ,cAAe,QAAlC,UACG3G,EACD,eAAC5B,EAAA,EAAD,CAAKC,UAAU,OAAf,UACe,OAAZ6B,GAAoBA,EAAQ6B,OAAS,EAAI,cAACzD,EAAA,EAAD,oNAAmDiI,EAChF,OAAZrG,EAAmB,KAAOsG,EACd,OAAZtG,GAAoBA,EAAQ6B,OAAS,EAAI,KAAO,cAACzD,EAAA,EAAD,CAAKD,UAAU,gBAAf,SAA+B,cAACiH,EAAA,EAAD,CAAQzF,QAAS,kBAAMgG,EAAYD,EAAW,IAA9C,0FC3CzEgB,E,kDAtCb,WAAYpI,GAAQ,IAAD,8BACjB,cAAMA,IAURwE,QAAU,SAACiD,EAAMzD,GACf,EAAKtD,SAAS,CAAC+G,OAAMzD,gBAAeqE,UAAU,KAZ7B,EAcnBzB,oBAAsB,SAAC5C,GACjB,EAAK/D,MAAMoI,UACb,EAAK3H,SAAS,CAACsD,mBAdjB,EAAK/D,MAAQ,CACXwH,KAAM,KACNzD,cAAe,KACfqE,UAAU,GALK,E,qDAQnB,c,oBAkBA,WACE,OACE,sBAAKxI,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAQ+G,oBAAqBnG,KAAKmG,oBAAqBpC,QAAS/D,KAAK+D,UACpE/D,KAAKR,MAAMoI,SAAW,cAAC,EAAD,CAAkBZ,KAAMhH,KAAKR,MAAMwH,KAAMzD,cAAevD,KAAKR,MAAM+D,gBAAoB,iB,GAjCpGvB,aCAlB6F,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.164b5295.chunk.js","sourcesContent":["import { Container, Row, Col } from \"react-bootstrap\"\r\n\r\nconst About = () => {\r\n    return (\r\n        <>\r\n            <Container>\r\n                <Row className='mt-5'>\r\n                    <Col className='about'>\r\n                        <h2>\r\n                            Здесь можно найти остатки ДСП, МДФ или чего-то еще\r\n                        </h2>\r\n                        <hr className='mt-5 mb-5' />\r\n                        <p>Ниже вы можете с помощью фильтра найти нужный вам остаток. Фильтровать можно по материалу, декору или толщине</p>\r\n                        <p>Чтобы найти материалы по длине, можно выбрать их из списка или же ввести вручную</p>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default About","\r\nimport React, { Component } from \"react\"\r\nimport { Col, InputGroup, DropdownButton, Dropdown, FormControl } from \"react-bootstrap\"\r\n\r\nclass Length extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            title: 'Длина',\r\n            show: false,\r\n            value: ''\r\n        }\r\n        this.dropdownRef = React.createRef();\r\n        this.dropdownButtonRef = React.createRef();\r\n    }\r\n    setTitle(title) {\r\n        this.setState({ title })\r\n        this.props.getDataToDisplay(title, 'length')\r\n    }\r\n    inputHandler(e) {\r\n        this.setState({value: e})\r\n        if (this.dropdownRef.current.value !== '') {\r\n            this.setState({show: true})\r\n        } else {\r\n            this.setState({show: false})\r\n        }\r\n    }\r\n    onDropDownButton(e) {\r\n        if (e.toLowerCase() === 'button') {\r\n            this.setState({show: !this.state.show})\r\n        } else {\r\n            this.setState({show: false})\r\n        }\r\n    }\r\n    \r\n\r\n    render() {\r\n        \r\n        const valuesLength = this.props.valuesLength.map((item, i) => <Dropdown.Item onClick={(e) => this.setTitle(item)} key={i} href=\"#\">{item}</Dropdown.Item>)\r\n        const loading = this.props.valuesLength === undefined ? 'loading' : null\r\n        const content = this.props.valuesLength !== undefined ? valuesLength : null\r\n        \r\n        return (\r\n            <Col className='col-12 col-lg-3'>\r\n                <InputGroup onClick={e => this.onDropDownButton(e.target.nodeName)}  className='mb-3'>\r\n                    <DropdownButton\r\n                        show={this.state.show}\r\n                        className='test'\r\n                        variant=\"outline-secondary\"\r\n                        title={this.state.title === 'Длина' ? 'Длина' : this.state.title + ' мм'}\r\n                        id=\"length-filter\"\r\n                        \r\n                    >\r\n    \r\n                        {loading}\r\n                        {content}\r\n                    </DropdownButton>\r\n                    <FormControl type='number' value={this.state.title === 'Длина' ?  this.state.value  : this.state.value == this.state.title ? '' : this.state.value} ref={this.dropdownRef} onChange={e => { this.props.updateLength(e.currentTarget.value, 'length'); this.inputHandler(e.currentTarget.value) }} aria-label=\"Text input with dropdown button\" />\r\n                </InputGroup>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n  \r\n}\r\n\r\nexport default Length","import React, { Component } from \"react\"\r\nimport { Col, InputGroup, DropdownButton, Dropdown, FormControl } from \"react-bootstrap\"\r\n\r\n\r\n\r\nclass Width extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            title: 'Ширина',\r\n            show: false,\r\n            value: ''\r\n        }\r\n        this.dropdownRef = React.createRef();\r\n        this.dropdownButtonRef = React.createRef();\r\n    }\r\n    setTitle(title) {\r\n        this.setState({title: title})\r\n        this.props.getDataToDisplay(title, 'width')\r\n    }\r\n    inputHandler(e) {\r\n        this.setState({value: e})\r\n        if (this.dropdownRef.current.value !== '') {\r\n            this.setState({show: true})\r\n        } else {\r\n            this.setState({show: false})\r\n        }\r\n    }\r\n    onDropDownButton(e) {\r\n        if (e.toLowerCase() === 'button') {\r\n            this.setState({show: !this.state.show})\r\n        } else {\r\n            this.setState({show: false})\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        \r\n        const ValuesWidth = () => this.props.valuesWidth.map((item, i) => <Dropdown.Item onClick={(e) => this.setTitle(item)} key={i} href=\"#\">{item}</Dropdown.Item>)\r\n            \r\n        const loading = this.props.valuesWidth === undefined ? 'loading' : null\r\n        const content = this.props.valuesWidth !== undefined ? <ValuesWidth /> : null\r\n        \r\n        return (\r\n            <Col className='col-12 col-lg-3'>\r\n                <InputGroup onClick={e => this.onDropDownButton(e.target.nodeName)} className=\"mb-3\">\r\n                    <DropdownButton\r\n                        show={this.state.show}\r\n                        variant=\"outline-secondary\"\r\n                        title={this.state.title === 'Ширина' ? 'Ширина' : this.state.title + ' мм'}\r\n                        id=\"width-filter\"\r\n                    >\r\n                        {loading}\r\n                        {content}\r\n                    </DropdownButton>\r\n                    <FormControl type='number' value={this.state.title === 'Ширина' ? this.state.value : this.state.value == this.state.title ? '' : this.state.value} ref={this.dropdownRef} onChange={(e) => { this.props.updateWidth(e.currentTarget.value, 'width'); this.inputHandler(e.currentTarget.value) }} aria-label=\"Text input with dropdown button\" />\r\n                </InputGroup>\r\n            </Col>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport default Width","import React, { Component } from \"react\"\r\nimport { Col, InputGroup, DropdownButton, Dropdown, FormControl } from \"react-bootstrap\"\r\n\r\nclass Height extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            title: 'Толщина',\r\n            show: false,\r\n            value: ''\r\n        }\r\n        this.dropdownRef = React.createRef();\r\n        this.dropdownButtonRef = React.createRef();\r\n    }\r\n    setTitle(title) {\r\n        this.setState({ title: title })\r\n        this.props.getDataToDisplay(title, 'height')\r\n    }\r\n    inputHandler(e) {\r\n        this.setState({value: e})\r\n        if (this.dropdownRef.current.value !== '') {\r\n            this.setState({show: true})\r\n        } else {\r\n            this.setState({show: false})\r\n        }\r\n    }\r\n    onDropDownButton(e) {\r\n        if (e.toLowerCase() === 'button') {\r\n            this.setState({show: !this.state.show})\r\n        } else {\r\n            this.setState({show: false})\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n        const ValuesHeight = () => this.props.valuesHeight.map((item, i) => <Dropdown.Item onClick={(e) => this.setTitle(item)} key={i} href=\"#\">{item}</Dropdown.Item>)\r\n\r\n        const loading = this.props.valuesHeight === undefined ? 'loading' : null\r\n        const content = this.props.valuesHeight !== undefined ? <ValuesHeight /> : null\r\n\r\n\r\n        return (\r\n            <Col className='col-12 col-lg-3'>\r\n                <InputGroup onClick={e => this.onDropDownButton(e.target.nodeName)} className=\"mb-3\">\r\n                    <DropdownButton\r\n                        show={this.state.show}\r\n                        variant=\"outline-secondary\"\r\n                        title={this.state.title === 'Толщина' ? 'Толщина' : this.state.title + ' мм'}\r\n                        id=\"height-filter\"\r\n                    >\r\n                        {loading}\r\n                        {content}\r\n                    </DropdownButton>\r\n                    <FormControl type='number' value={this.state.title === 'Толщина' ?  this.state.value  : this.state.value == this.state.title ? '' : this.state.value} ref={this.dropdownRef} onChange={(e) => {this.props.updateHeight(e.currentTarget.value, 'height'); this.inputHandler(e.currentTarget.value) }} aria-label=\"Text input with dropdown button\" />\r\n                </InputGroup>\r\n            </Col>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Height","import { useState } from \"react\"\r\nimport { Col, InputGroup, DropdownButton, Dropdown} from \"react-bootstrap\"\r\n\r\nconst Material = (props) => {\r\n\r\n    \r\n    const [title, setTitle] = useState('Материал')\r\n    const throwMaterial = (material) => {\r\n        props.getDataToDisplay(material, 'material')\r\n    }\r\n    \r\n    const material = props.materials.map((material, i) => <Dropdown.Item onClick={(e) => {setTitle(material); throwMaterial(material)}} key={i} href=\"#\">{material}</Dropdown.Item>)\r\n    const loading = props.materials.length < 0 ? 'loading' : null\r\n    const content = props.materials.length > 0 ? material : null\r\n    return (\r\n        <Col className='col-12 col-lg-3'>\r\n            <InputGroup className={`mb-3 ${props.class}`}>\r\n                <DropdownButton\r\n                    variant=\"outline-secondary\"\r\n                    title={title}\r\n                    id=\"material-filter\"\r\n                >\r\n                    {loading}\r\n                    {content}\r\n                </DropdownButton>\r\n                \r\n            </InputGroup>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default Material","import * as nomenclatures from '../data/left-overs-json-origin.json'\r\n// import * as nomenclatures from '../data/left-overs-json.json'\r\n\r\nclass dataService {\r\n    \r\n    \r\n    _data = nomenclatures.default.filter(item => !item.B.includes('Столешница') && !item.B.includes('Стільниця') && !item.B.includes('Стеновая панель'))\r\n    \r\n    // _data.filter(item => item.B.includes('Столешница'))\r\n\r\n    constructor(code, title, length, width, height, quantity, price) {\r\n        this.code = +code\r\n        this.title = title\r\n        this.length = length\r\n        this.width = width\r\n        this.height = +height\r\n        this.quantity = +quantity\r\n        this.price = +price\r\n    }\r\n    \r\n    createItem = () => {\r\n        \r\n        let material = () => {\r\n\r\n            let title = this.title[0] === ' ' ? this.title.slice(1) : this.title\r\n\r\n            if (title.match(/^ДСП+/i)) {\r\n                return 'ДСП'\r\n            } else if (title.match(/^МДФ+/i)) {\r\n                return 'МДФ'\r\n            } else if (title.match(/^ЛМДФ+/i)) {\r\n                return 'ЛМДФ'\r\n            } else if (title.match(/^Лист акриловий+/i) || title.match(/^Лист акриловый+/i)) {\r\n                return 'Лист акриловый'\r\n            } else if (title.match(/^Панель МДФ+/i)) {\r\n                return 'Панель МДФ'\r\n            } else if (title.match(/^Плита OSB+/i)) {\r\n                return 'Плита OSB'\r\n            } \r\n            // else if (title.match(/^Столешница+/i)) {\r\n            //     return 'Столешница'\r\n            // }\r\n        }\r\n\r\n        let nomenclature = {\r\n            code: this.code,\r\n            title: this.title,\r\n            material: material(),\r\n            length: +this.length.slice(0, this.length.indexOf('х' || 'x')),\r\n            width: +this.width.slice(this.width.indexOf('х' || 'x') + 1),\r\n            height: this.height,\r\n            quantity: this.quantity,\r\n            price: this.price,\r\n        }\r\n\r\n        return nomenclature\r\n    }\r\n    \r\n    getData = () => {\r\n        let result = []\r\n        this._data.forEach(item => {\r\n            result.push(new dataService(\r\n                item.A,\r\n                item.B,\r\n                item.E,\r\n                item.E,\r\n                item.F,\r\n                item.H,\r\n                item.I).createItem()\r\n            )\r\n        })\r\n        return result\r\n    }\r\n}\r\n\r\n\r\nexport default dataService","import { Container, Row, Col, Button } from \"react-bootstrap\"\r\nimport Length from \"./Length\"\r\nimport Width from \"./Width\"\r\nimport Height from \"./Height\"\r\nimport Material from \"./Material\"\r\nimport Decor from \"./Decor\"\r\n\r\nimport dataService from \"../service/dataService\"\r\nimport { Component } from \"react\"\r\n\r\nclass Filter extends Component {\r\n    state = {\r\n        nomenclatures: [],\r\n        length: [],\r\n        width: [],\r\n        height: [],\r\n        material: null,\r\n        lengthOnChange: '',\r\n        widthOnChange: '',\r\n        heightOnChange: '',\r\n        searchCase: '',\r\n        valuesToDisplay: {\r\n            length: null,\r\n            width: null,\r\n            height: null,\r\n            material: null\r\n        },\r\n    }\r\n\r\n    dataServices = new dataService()\r\n\r\n    componentDidMount() {\r\n        this.setState({ nomenclatures: this.dataServices.getData() })\r\n        \r\n        \r\n        // this.setState({ length: this.dataServices.getLength() })\r\n        // this.setState({ width: this.dataServices.getWidth() })\r\n        // this.setState({ height: this.dataServices.getHeight() })        \r\n    }\r\n    \r\n    // componentWillUpdate() {\r\n    //     console.log('update');\r\n    //     this.props.getNomenclatureList(this.state.nomenclatures)\r\n    // }\r\n\r\n    searchForLength = (items, value) => {\r\n        if (value.length <= 0) {\r\n            return items\r\n        } else {\r\n            return items.filter(item => item.toString().includes(value))\r\n        }\r\n    }\r\n\r\n    searchForWidth = (items, value) => {\r\n        if (value.length <= 0) {\r\n            return items\r\n        } else {\r\n            return items.filter(item => item.toString().includes(value))\r\n        }\r\n    }\r\n    searchForHeight = (items, value) => {\r\n        if (value.length <= 0) {\r\n            return items\r\n        } else {\r\n            return items.filter(item => item.toString().includes(value))\r\n        }\r\n    }\r\n\r\n    updateSearchValue = (value, searchCase) => {\r\n        switch (searchCase) {\r\n            case 'length':\r\n                this.setState({ lengthOnChange: value, searchCase })\r\n                break\r\n            case 'width':\r\n                this.setState({ widthOnChange: value, searchCase })\r\n                break\r\n            case 'height':\r\n                this.setState({ heightOnChange: value, searchCase })\r\n                break\r\n            default:\r\n                break\r\n        }\r\n    }\r\n\r\n    getDataToDisplay = (value, dataCase) => {\r\n\r\n        let valuesToDisplay = { ...this.state.valuesToDisplay }\r\n\r\n        switch (dataCase) {\r\n            case 'length':\r\n                valuesToDisplay.length = value\r\n                this.setState({ valuesToDisplay })\r\n                break;\r\n            case 'width':\r\n                valuesToDisplay.width = value\r\n                this.setState({ valuesToDisplay })\r\n                break;\r\n            case 'height':\r\n                valuesToDisplay.height = value\r\n                this.setState({ valuesToDisplay })\r\n                break;\r\n            case 'material':\r\n                valuesToDisplay.material = value\r\n                this.setState({ valuesToDisplay })\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { widthOnChange, lengthOnChange, heightOnChange } = this.state\r\n        const length = this.state.nomenclatures.map(item => item.length).sort((a, b) => a - b).filter((element, index, array) => array.indexOf(element) === index)\r\n        const width = this.state.nomenclatures.map(item => item.width).sort((a, b) => a - b).filter((element, index, array) => array.indexOf(element) === index)\r\n        const height = this.state.nomenclatures.map(item => item.height).sort((a, b) => a - b).filter((element, index, array) => array.indexOf(element) === index)\r\n        const material = this.state.nomenclatures.map(item => item.material).sort((a, b) => a - b).filter((element, index, array) => array.indexOf(element) === index)\r\n        const visibleLengthValues = this.searchForLength(length, lengthOnChange)\r\n        const visibleWidthValues = this.searchForWidth(width, widthOnChange)\r\n        const visibleHeightValues = this.searchForHeight(height, heightOnChange)\r\n\r\n        const onValuesToDisplay = Object.values(this.state.valuesToDisplay).filter(item => item || item === 0)\r\n        \r\n\r\n        return (\r\n            <Container className='mt-4'>\r\n                <Row className='justify-content-center'>\r\n                    <Length getDataToDisplay={this.getDataToDisplay} updateLength={this.updateSearchValue} valuesLength={visibleLengthValues} />\r\n                    <Width getDataToDisplay={this.getDataToDisplay} updateWidth={this.updateSearchValue} valuesWidth={visibleWidthValues} />\r\n                    <Height getDataToDisplay={this.getDataToDisplay} updateHeight={this.updateSearchValue} valuesHeight={visibleHeightValues} />\r\n                </Row>\r\n                <Row className='justify-content-center'>\r\n                    <Material getDataToDisplay={this.getDataToDisplay} class={'justify-content-center'} materials={material} />\r\n                    {/* <Decor class={'justify-content-center'} /> */}\r\n                </Row>\r\n                { onValuesToDisplay.length >= 4 && <SearchButton getData={this.props.getData} search={this.props.getNomenclatureList} nomenclatures={this.state.nomenclatures} state={this.state.valuesToDisplay} />}\r\n            </Container>\r\n\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nconst SearchButton = (props) => {\r\n    \r\n    return (\r\n        <Row className=\"mt-4\">\r\n            <Col className=\"\">\r\n                <Button className=\"search-btn\" onClick={() => {props.getData(props.state, props.nomenclatures); props.search(props.nomenclatures)}} variant=\"primary\">Найти</Button>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default Filter","import { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { Button, Col, Container, Row } from 'react-bootstrap';\r\n\r\n\r\nconst NomenclatureList = (props) => {\r\n  const [showNomenclatures, setNomenclatures] = useState(null)\r\n  const [sortNomenclatures, setSort] = useState('code')\r\n  const [loadMore, setLoadMore] = useState(9)\r\n  \r\n  useEffect(() => {\r\n    toShowNomenclatures()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    toShowNomenclatures()\r\n  }, [sortNomenclatures])\r\n\r\n  useEffect(() => {\r\n    toShowNomenclatures()\r\n  }, [props])\r\n\r\n  const toShowNomenclatures = () => {\r\n    \r\n    let visibleNomenclatures = props.nomenclatures.filter(item =>\r\n      item.length > props.data.length\r\n      && item.height > props.data.height\r\n      && item.width > props.data.width\r\n      && item.material === props.data.material)\r\n      .sort((a, b) => a[sortNomenclatures] - b[sortNomenclatures])\r\n\r\n    setNomenclatures(visibleNomenclatures)\r\n  }\r\n\r\n  const sorting = (sort) => {\r\n    setSort(sort)\r\n  }\r\n\r\n  const loading = showNomenclatures === null ? 'loading' : null\r\n  const content = showNomenclatures !== null ? showNomenclatures.map((item, i) =>\r\n\r\n    <div key={`${item.code}_${i}`} className=\"col-12 col-sm-6 col-md-4 p-4\">\r\n      <ul className='result-item'>\r\n        <li>\r\n          <p style={{ textAlign: 'center', fontWeight: 'bold', margin: '0 auto' }}>\r\n            {item.title}\r\n          </p>\r\n        </li>\r\n        <li>\r\n          <b>Номенклатура: </b> {item.code}\r\n        </li>\r\n        <li>\r\n          <b>Материал:</b> {item.material}\r\n        </li>\r\n        <li>\r\n          <b>Ширина:</b> {item.width} мм <br />\r\n        </li>\r\n        <li>\r\n          <b>Высота:</b> {item.height} мм<br />\r\n        </li>\r\n        <li>\r\n          <b>Длина:</b> {item.length} мм<br />\r\n        </li>\r\n        <li>\r\n          <b>Цена:</b> {item.price} &#8372;\r\n        </li>\r\n      </ul>\r\n    </div>\r\n\r\n  ) : null\r\n  const sortBtns = <Row>\r\n    <Col className='col-12'>Сортировать по:\r\n      <Button className='sort-btn' onClick={() => sorting('width')} variant='light'>Ширине</Button>\r\n      <Button className='sort-btn' onClick={() => sorting('length')} variant='light'>Длине</Button>\r\n    </Col>\r\n  </Row>\r\n  const contentToShow = content === null ? <Col>По вашим параметрам ничего не найдено</Col> : content.filter((item, index) => {\r\n    while (index < loadMore) {\r\n      return item\r\n    } \r\n    return false    \r\n  })\r\n  console.log(contentToShow);\r\n  return (\r\n    <Container style={{paddingBottom: '24px'}}>\r\n      {loading}\r\n      <Row className='mt-5'>\r\n        {content === null || content.length < 1 ? <Col>По вашим параметрам ничего не найдено</Col> : sortBtns}\r\n        {content === null ? null : contentToShow}\r\n        {content === null || content.length < 9 ? null : <Col className='col-2 mx-auto'><Button onClick={() => setLoadMore(loadMore + 9)}>Показать еще</Button></Col> }\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\n\r\nexport default NomenclatureList;\r\n","import { Component } from 'react';\nimport './App.css';\nimport About from './About/About';\nimport Filter from './Filter/Filter';\nimport NomenclatureList from './NomenclatureList/NomenclatureList';\n\nclass App extends Component {\n/* i have to find out how to get wait for some data from this.state.data */\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      nomenclatures: null,\n      isLoaded: false\n    }\n  }\n  componentDidMount() {\n    // console.log('mount app');\n  }\n  getData = (data, nomenclatures) => {\n    this.setState({data, nomenclatures, isLoaded: true})\n  }\n  getNomenclatureList = (nomenclatures) => {\n    if (this.state.isLoaded) {\n      this.setState({nomenclatures})\n    } else {\n      // console.log('aaaaaaaaaaaaaaaaa');\n    }\n    // let l = nomenclatures.filter(l => l.length === this.state.data.length)  \n    // let l = nomenclatures.filter(l => console.log(l.length))\n    // console.log(nomenclatures);\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <About />\n        <Filter getNomenclatureList={this.getNomenclatureList} getData={this.getData} />\n        {this.state.isLoaded ? <NomenclatureList data={this.state.data} nomenclatures={this.state.nomenclatures} /> : 'filter!'}\n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}